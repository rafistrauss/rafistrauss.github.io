import{S as n,i as e,s as a,N as s,e as t,l as o,k as p,P as i,c,d as l,n as r,a as u,b as d,L as h,f as m,O as k,v as f,r as g,T as y,A as v,j as x,m as b,o as w,p as z,q as E,w as $,U as A,t as T,g as I,E as P,F as S}from"../../chunks/vendor-2275b982.js";function N(n){let e,a,v,x,b,w,z,E,$,A,T,I,P,S='<script type="application/ld+json">'+JSON.stringify(n[1])+"<\/script>";document.title=e=n[3];const N=n[9].default,O=s(N,n,n[8],null);return{c(){a=t("link"),v=t("meta"),x=t("meta"),b=t("meta"),w=t("meta"),z=t("meta"),E=t("meta"),A=o(),T=p(),I=t("article"),O&&O.c(),this.h()},l(n){const e=i('[data-svelte="svelte-19l2mv2"]',document.head);a=c(e,"LINK",{rel:!0,href:!0}),v=c(e,"META",{name:!0,content:!0}),x=c(e,"META",{name:!0,content:!0}),b=c(e,"META",{property:!0,content:!0}),w=c(e,"META",{property:!0,content:!0}),z=c(e,"META",{property:!0,content:!0}),E=c(e,"META",{property:!0,content:!0}),A=o(),e.forEach(l),T=r(n),I=c(n,"ARTICLE",{class:!0});var s=u(I);O&&O.l(s),s.forEach(l),this.h()},h(){d(a,"rel","canonical"),d(a,"href",n[2]),d(v,"name","description"),d(v,"content",n[4]),d(x,"name","author"),d(x,"content","Rafi Strauss"),d(b,"property","og:url"),d(b,"content",n[2]),d(w,"property","og:title"),d(w,"content",n[3]),d(z,"property","og:type"),d(z,"content",D),d(E,"property","og:image"),d(E,"content",n[0]),$=new y(A),d(I,"class","blog-post")},m(n,e){h(document.head,a),h(document.head,v),h(document.head,x),h(document.head,b),h(document.head,w),h(document.head,z),h(document.head,E),$.m(S,document.head),h(document.head,A),m(n,T,e),m(n,I,e),O&&O.m(I,null),P=!0},p(n,[a]){(!P||8&a)&&e!==(e=n[3])&&(document.title=e),(!P||1&a)&&d(E,"content",n[0]),O&&O.p&&(!P||256&a)&&k(O,N,n,n[8],a,null,null)},i(n){P||(f(O,n),P=!0)},o(n){g(O,n),P=!1},d(n){l(a),l(v),l(x),l(b),l(w),l(z),l(E),l(A),n&&$.d(),n&&l(T),n&&l(I),O&&O.d(n)}}}const D="article";function O(n,e,a){let{$$slots:s={},$$scope:t}=e,{title:o}=e,{outline:p}=e,{slug:i}=e,{image:c}=e;const l={"@context":"https://schema.org","@type":"NewsArticle",mainEntityOfPage:{"@type":"WebPage","@id":"https://google.com/article"},headline:o,image:["https://example.com/photos/1x1/photo.jpg","https://example.com/photos/4x3/photo.jpg","https://example.com/photos/16x9/photo.jpg"],datePublished:"2015-02-05T08:00:00+08:00",dateModified:"2015-02-05T09:20:00+08:00",author:{"@type":"Person",name:"Rafi Strauss",url:"https://rafistrauss.com/"}},r=`https://rafistrauss.com/blog/${i}`,u=o,d=p;return n.$$set=n=>{"title"in n&&a(5,o=n.title),"outline"in n&&a(6,p=n.outline),"slug"in n&&a(7,i=n.slug),"image"in n&&a(0,c=n.image),"$$scope"in n&&a(8,t=n.$$scope)},[c,l,r,u,d,o,p,i,t,s]}class R extends n{constructor(n){super(),e(this,n,O,N,a,{title:5,outline:6,slug:7,image:0})}}function C(n){let e,a,s,o,i,k,f,g,y,v,x,b,w,z,E,$,A,N,D,O,R,C,M,L,j,F,H,V,W,K,_,U,q,G,J,Q,X,Y,nn,en,an,sn,tn,on,pn,cn,ln,rn,un,dn,hn,mn,kn,fn,gn,yn,vn,xn,bn,wn,zn,En,$n,An,Tn,In,Pn,Sn,Nn,Dn,On,Rn,Cn,Mn,Ln,Zn,jn,Bn,Fn,Hn,Vn,Wn,Kn,_n,Un,qn,Gn,Jn,Qn,Xn,Yn,ne,ee,ae,se,te,oe,pe,ie,ce,le,re,ue,de,he,me,ke,fe,ge,ye,ve,xe,be,we,ze,Ee,$e,Ae,Te,Ie,Pe,Se,Ne,De,Oe,Re,Ce,Me,Le,Ze,je,Be,Fe,He,Ve,We,Ke,_e,Ue,qe,Ge,Je,Qe,Xe,Ye,na,ea,aa,sa,ta,oa,pa,ia,ca,la,ra,ua,da,ha,ma,ka,fa,ga,ya,va,xa,ba,wa,za,Ea,$a,Aa,Ta,Ia,Pa,Sa,Na,Da,Oa;return{c(){e=t("h1"),a=T(Z),s=p(),o=t("h2"),i=T(B),k=p(),f=t("p"),g=T("Countless bytes have already been written about the issues with maintaining z-indexes and avoiding the classic problem of “battling 9’s” (i.e. “I need A to stack on top of B; let me just add another 9 to the z-index”). As such, I won’t go into too much detail about that particular aspect of the challenge; instead I will focus on a particular pitfall that I’ve never seen addressed before."),y=p(),v=t("p"),x=T("Firstly, though, I will give a brief background so that the necessary details are in place. Z-indexes are how developers can specify which element should be on “top” when multiple elements overlap. A basic example is shown:"),b=p(),w=t("div"),z=t("div"),E=T("Default "),$=t("br"),A=t("br"),N=p(),D=t("span"),O=T("z-index: 1;"),R=p(),C=t("span"),M=T("z-index: 2"),L=p(),j=t("div"),F=T("Changing overlap with z-index "),H=t("br"),V=t("br"),W=p(),K=t("span"),_=T("z-index: 2"),U=p(),q=t("span"),G=T("z-index: 1;"),J=p(),Q=t("p"),X=T("This works fairly well in many simple cases. The issue becomes one of maintainability - as your site grows and components elements get reused in multiple contexts, it can be hard to keep track of all the different z-indexes you may rely on. For example, at my last check NBC News had 21 unique z-indexes defined, ranging from "),Y=t("code"),nn=T("-1"),en=T(" to "),an=t("code"),sn=T("20000000"),tn=T("."),on=p(),pn=t("h3"),cn=t("a"),ln=T("Reconceiving z-indexes"),rn=p(),un=t("p"),dn=T("The problem partially stems from a misguided view of what a z-index "),hn=t("em"),mn=T("actually"),kn=T(" is. Technically, z-indexes are "),fn=t("strong"),gn=T("cardinal numbers"),yn=T(", where the value of the number matters intrinsically. As an analogy, money can be thought of as cardinal, since $100 is better than $1."),vn=p(),xn=t("p"),bn=T("Conversely, an "),wn=t("strong"),zn=T("ordinal number"),En=T(" is one that delineates an "),$n=t("em"),An=T("order"),Tn=T(", e.g. First, Second, Fifth, and the like. Think of a race, where the actual time each person runs is almost immaterial (save for things like world records); what matters is who comes First, who comes after, and so on."),In=p(),Pn=t("p"),Sn=T("Z-indexes are best visualized as ordinals. To use our above example"),Nn=p(),Dn=t("div"),On=t("div"),Rn=T("Default "),Cn=t("br"),Mn=t("br"),Ln=p(),Zn=t("span"),jn=T("z-index: 1;"),Bn=p(),Fn=t("span"),Hn=T("z-index: 2"),Vn=p(),Wn=t("div"),Kn=T("Very large z-index "),_n=t("br"),Un=t("br"),qn=p(),Gn=t("span"),Jn=T("z-index: 1"),Qn=p(),Xn=t("span"),Yn=T("z-index: 999;"),ne=p(),ee=t("p"),ae=T("A z-index of "),se=t("code"),te=T("999"),oe=T(" is no better than "),pe=t("code"),ie=T("2"),ce=T(" – the only thing that matters is a sufficiently large z-index for the element you wish to appear on top."),le=p(),re=t("h3"),ue=t("a"),de=T("Using Sass lists"),he=p(),me=t("p"),ke=T("Sass lists are a great way to use this new way of thinking in practice. Instead of having to keep track of a slew of different numbers, you can just make a list with the elements in the order they should stack, then reference the desired element with the "),fe=t("code"),ge=T("index"),ye=T(" function:"),ve=p(),xe=t("pre"),be=p(),we=t("p"),ze=T("which would compile to"),Ee=p(),$e=t("pre"),Ae=p(),Te=t("p"),Ie=T("To make this method especially cool, since the z-indexes are generated at compile-time we no longer have any issues if we need to slip a new element into the mix. Adding something like a "),Pe=t("code"),Se=T("notification"),Ne=T(" element into the list before the "),De=t("code"),Oe=T("header"),Re=T(" element would automatically bump the generated z-index for "),Ce=t("code"),Me=T("header"),Le=T(" to 3."),Ze=p(),je=t("p"),Be=T("In my opinion, this is "),Fe=t("em"),He=T("the"),Ve=T(" absolute best way to handle z-indexes – with one caveat. What do you do if there’s a 3rd party element on your page that defines its own z-index, and it doesn’t fall nicely into your list of elements?"),We=p(),Ke=t("p"),_e=T("An alternative approach that I’ve seen proposed is to create a map of your z-indexes, so they are all organized in the same location, something like"),Ue=p(),qe=t("pre"),Ge=p(),Je=t("p"),Qe=T("This solves the issue of arbitrary z-indexes posed by 3rd party elements, but it removes the benefit of ordered & automatically incrementing elements. Can we get the benefits of each of these approaches?"),Xe=p(),Ye=t("h3"),na=t("a"),ea=T("Ordered z-index maps (OZMap) to the rescue"),aa=p(),sa=t("p"),ta=T("With a little bit of ingenuity I believe we can eat our cake & have it, too. We do this by creating a new kind of map with the following 2 rules:"),oa=p(),pa=t("ol"),ia=t("li"),ca=T("The elements of the map may contain "),la=t("code"),ra=T("null"),ua=T(" (to indicate that the z-index value should be set automatically)"),da=p(),ha=t("li"),ma=T("The elements of the map may contain a hardcoded number, to be used as the z-index for that element."),ka=t("ul"),fa=t("li"),ga=T("Note that the value "),ya=t("strong"),va=T("must"),xa=T(" be greater than any preceding element, to maintain the order"),ba=p(),wa=t("p"),za=T("An example of what such a map and a function to use it might look like:"),Ea=p(),$a=t("pre"),Aa=p(),Ta=t("p"),Ia=T("which would compile to"),Pa=p(),Sa=t("pre"),Na=p(),Da=t("p"),Oa=T("Thus, we have achieved both convenience with auto-incrementing z-indexes AND flexibility for 3rd-party defined z-indexes."),this.h()},l(n){e=c(n,"H1",{id:!0});var t=u(e);a=I(t,Z),t.forEach(l),s=r(n),o=c(n,"H2",{id:!0});var p=u(o);i=I(p,B),p.forEach(l),k=r(n),f=c(n,"P",{});var d=u(f);g=I(d,"Countless bytes have already been written about the issues with maintaining z-indexes and avoiding the classic problem of “battling 9’s” (i.e. “I need A to stack on top of B; let me just add another 9 to the z-index”). As such, I won’t go into too much detail about that particular aspect of the challenge; instead I will focus on a particular pitfall that I’ve never seen addressed before."),d.forEach(l),y=r(n),v=c(n,"P",{});var h=u(v);x=I(h,"Firstly, though, I will give a brief background so that the necessary details are in place. Z-indexes are how developers can specify which element should be on “top” when multiple elements overlap. A basic example is shown:"),h.forEach(l),b=r(n),w=c(n,"DIV",{style:!0});var m=u(w);z=c(m,"DIV",{});var T=u(z);E=I(T,"Default "),$=c(T,"BR",{}),A=c(T,"BR",{}),N=r(T),D=c(T,"SPAN",{style:!0});var P=u(D);O=I(P,"z-index: 1;"),P.forEach(l),R=r(T),C=c(T,"SPAN",{style:!0});var S=u(C);M=I(S,"z-index: 2"),S.forEach(l),T.forEach(l),L=r(m),j=c(m,"DIV",{});var Ra=u(j);F=I(Ra,"Changing overlap with z-index "),H=c(Ra,"BR",{}),V=c(Ra,"BR",{}),W=r(Ra),K=c(Ra,"SPAN",{style:!0});var Ca=u(K);_=I(Ca,"z-index: 2"),Ca.forEach(l),U=r(Ra),q=c(Ra,"SPAN",{style:!0});var Ma=u(q);G=I(Ma,"z-index: 1;"),Ma.forEach(l),Ra.forEach(l),m.forEach(l),J=r(n),Q=c(n,"P",{});var La=u(Q);X=I(La,"This works fairly well in many simple cases. The issue becomes one of maintainability - as your site grows and components elements get reused in multiple contexts, it can be hard to keep track of all the different z-indexes you may rely on. For example, at my last check NBC News had 21 unique z-indexes defined, ranging from "),Y=c(La,"CODE",{});var Za=u(Y);nn=I(Za,"-1"),Za.forEach(l),en=I(La," to "),an=c(La,"CODE",{});var ja=u(an);sn=I(ja,"20000000"),ja.forEach(l),tn=I(La,"."),La.forEach(l),on=r(n),pn=c(n,"H3",{id:!0});var Ba=u(pn);cn=c(Ba,"A",{href:!0});var Fa=u(cn);ln=I(Fa,"Reconceiving z-indexes"),Fa.forEach(l),Ba.forEach(l),rn=r(n),un=c(n,"P",{});var Ha=u(un);dn=I(Ha,"The problem partially stems from a misguided view of what a z-index "),hn=c(Ha,"EM",{});var Va=u(hn);mn=I(Va,"actually"),Va.forEach(l),kn=I(Ha," is. Technically, z-indexes are "),fn=c(Ha,"STRONG",{});var Wa=u(fn);gn=I(Wa,"cardinal numbers"),Wa.forEach(l),yn=I(Ha,", where the value of the number matters intrinsically. As an analogy, money can be thought of as cardinal, since $100 is better than $1."),Ha.forEach(l),vn=r(n),xn=c(n,"P",{});var Ka=u(xn);bn=I(Ka,"Conversely, an "),wn=c(Ka,"STRONG",{});var _a=u(wn);zn=I(_a,"ordinal number"),_a.forEach(l),En=I(Ka," is one that delineates an "),$n=c(Ka,"EM",{});var Ua=u($n);An=I(Ua,"order"),Ua.forEach(l),Tn=I(Ka,", e.g. First, Second, Fifth, and the like. Think of a race, where the actual time each person runs is almost immaterial (save for things like world records); what matters is who comes First, who comes after, and so on."),Ka.forEach(l),In=r(n),Pn=c(n,"P",{});var qa=u(Pn);Sn=I(qa,"Z-indexes are best visualized as ordinals. To use our above example"),qa.forEach(l),Nn=r(n),Dn=c(n,"DIV",{style:!0});var Ga=u(Dn);On=c(Ga,"DIV",{});var Ja=u(On);Rn=I(Ja,"Default "),Cn=c(Ja,"BR",{}),Mn=c(Ja,"BR",{}),Ln=r(Ja),Zn=c(Ja,"SPAN",{style:!0});var Qa=u(Zn);jn=I(Qa,"z-index: 1;"),Qa.forEach(l),Bn=r(Ja),Fn=c(Ja,"SPAN",{style:!0});var Xa=u(Fn);Hn=I(Xa,"z-index: 2"),Xa.forEach(l),Ja.forEach(l),Vn=r(Ga),Wn=c(Ga,"DIV",{});var Ya=u(Wn);Kn=I(Ya,"Very large z-index "),_n=c(Ya,"BR",{}),Un=c(Ya,"BR",{}),qn=r(Ya),Gn=c(Ya,"SPAN",{style:!0});var ns=u(Gn);Jn=I(ns,"z-index: 1"),ns.forEach(l),Qn=r(Ya),Xn=c(Ya,"SPAN",{style:!0});var es=u(Xn);Yn=I(es,"z-index: 999;"),es.forEach(l),Ya.forEach(l),Ga.forEach(l),ne=r(n),ee=c(n,"P",{});var as=u(ee);ae=I(as,"A z-index of "),se=c(as,"CODE",{});var ss=u(se);te=I(ss,"999"),ss.forEach(l),oe=I(as," is no better than "),pe=c(as,"CODE",{});var ts=u(pe);ie=I(ts,"2"),ts.forEach(l),ce=I(as," – the only thing that matters is a sufficiently large z-index for the element you wish to appear on top."),as.forEach(l),le=r(n),re=c(n,"H3",{id:!0});var os=u(re);ue=c(os,"A",{href:!0});var ps=u(ue);de=I(ps,"Using Sass lists"),ps.forEach(l),os.forEach(l),he=r(n),me=c(n,"P",{});var is=u(me);ke=I(is,"Sass lists are a great way to use this new way of thinking in practice. Instead of having to keep track of a slew of different numbers, you can just make a list with the elements in the order they should stack, then reference the desired element with the "),fe=c(is,"CODE",{});var cs=u(fe);ge=I(cs,"index"),cs.forEach(l),ye=I(is," function:"),is.forEach(l),ve=r(n),xe=c(n,"PRE",{class:!0}),u(xe).forEach(l),be=r(n),we=c(n,"P",{});var ls=u(we);ze=I(ls,"which would compile to"),ls.forEach(l),Ee=r(n),$e=c(n,"PRE",{class:!0}),u($e).forEach(l),Ae=r(n),Te=c(n,"P",{});var rs=u(Te);Ie=I(rs,"To make this method especially cool, since the z-indexes are generated at compile-time we no longer have any issues if we need to slip a new element into the mix. Adding something like a "),Pe=c(rs,"CODE",{});var us=u(Pe);Se=I(us,"notification"),us.forEach(l),Ne=I(rs," element into the list before the "),De=c(rs,"CODE",{});var ds=u(De);Oe=I(ds,"header"),ds.forEach(l),Re=I(rs," element would automatically bump the generated z-index for "),Ce=c(rs,"CODE",{});var hs=u(Ce);Me=I(hs,"header"),hs.forEach(l),Le=I(rs," to 3."),rs.forEach(l),Ze=r(n),je=c(n,"P",{});var ms=u(je);Be=I(ms,"In my opinion, this is "),Fe=c(ms,"EM",{});var ks=u(Fe);He=I(ks,"the"),ks.forEach(l),Ve=I(ms," absolute best way to handle z-indexes – with one caveat. What do you do if there’s a 3rd party element on your page that defines its own z-index, and it doesn’t fall nicely into your list of elements?"),ms.forEach(l),We=r(n),Ke=c(n,"P",{});var fs=u(Ke);_e=I(fs,"An alternative approach that I’ve seen proposed is to create a map of your z-indexes, so they are all organized in the same location, something like"),fs.forEach(l),Ue=r(n),qe=c(n,"PRE",{class:!0}),u(qe).forEach(l),Ge=r(n),Je=c(n,"P",{});var gs=u(Je);Qe=I(gs,"This solves the issue of arbitrary z-indexes posed by 3rd party elements, but it removes the benefit of ordered & automatically incrementing elements. Can we get the benefits of each of these approaches?"),gs.forEach(l),Xe=r(n),Ye=c(n,"H3",{id:!0});var ys=u(Ye);na=c(ys,"A",{href:!0});var vs=u(na);ea=I(vs,"Ordered z-index maps (OZMap) to the rescue"),vs.forEach(l),ys.forEach(l),aa=r(n),sa=c(n,"P",{});var xs=u(sa);ta=I(xs,"With a little bit of ingenuity I believe we can eat our cake & have it, too. We do this by creating a new kind of map with the following 2 rules:"),xs.forEach(l),oa=r(n),pa=c(n,"OL",{});var bs=u(pa);ia=c(bs,"LI",{});var ws=u(ia);ca=I(ws,"The elements of the map may contain "),la=c(ws,"CODE",{});var zs=u(la);ra=I(zs,"null"),zs.forEach(l),ua=I(ws," (to indicate that the z-index value should be set automatically)"),ws.forEach(l),da=r(bs),ha=c(bs,"LI",{});var Es=u(ha);ma=I(Es,"The elements of the map may contain a hardcoded number, to be used as the z-index for that element."),ka=c(Es,"UL",{});var $s=u(ka);fa=c($s,"LI",{});var As=u(fa);ga=I(As,"Note that the value "),ya=c(As,"STRONG",{});var Ts=u(ya);va=I(Ts,"must"),Ts.forEach(l),xa=I(As," be greater than any preceding element, to maintain the order"),As.forEach(l),$s.forEach(l),Es.forEach(l),bs.forEach(l),ba=r(n),wa=c(n,"P",{});var Is=u(wa);za=I(Is,"An example of what such a map and a function to use it might look like:"),Is.forEach(l),Ea=r(n),$a=c(n,"PRE",{class:!0}),u($a).forEach(l),Aa=r(n),Ta=c(n,"P",{});var Ps=u(Ta);Ia=I(Ps,"which would compile to"),Ps.forEach(l),Pa=r(n),Sa=c(n,"PRE",{class:!0}),u(Sa).forEach(l),Na=r(n),Da=c(n,"P",{});var Ss=u(Da);Oa=I(Ss,"Thus, we have achieved both convenience with auto-incrementing z-indexes AND flexibility for 3rd-party defined z-indexes."),Ss.forEach(l),this.h()},h(){d(e,"id","title"),d(o,"id","outline"),P(D,"display","inline-flex"),P(D,"place-items","center"),P(D,"place-content","center"),P(D,"position","relative"),P(D,"background","#1ebf00"),P(D,"width","100px"),P(D,"height","100px"),P(D,"z-index","1"),P(C,"display","inline-flex"),P(C,"place-items","center"),P(C,"place-content","center"),P(C,"position","relative"),P(C,"background","orange"),P(C,"width","100px"),P(C,"height","100px"),P(C,"transform","translate(-15px, 15px)"),P(C,"z-index","2"),P(K,"display","inline-flex"),P(K,"place-items","center"),P(K,"place-content","center"),P(K,"position","relative"),P(K,"background","#1ebf00"),P(K,"width","100px"),P(K,"height","100px"),P(K,"z-index","2"),P(q,"display","inline-flex"),P(q,"place-items","center"),P(q,"place-content","center"),P(q,"position","relative"),P(q,"background","orange"),P(q,"width","100px"),P(q,"height","100px"),P(q,"transform","translate(-15px, 15px)"),P(q,"z-index","1"),P(w,"background-color","gainsboro"),P(w,"padding","2em"),P(w,"display","grid"),P(w,"grid-template-columns","repeat(auto-fit, minmax(250px, 1fr))"),P(w,"gap","2em"),P(w,"place-items","center"),d(cn,"href","#reconceiving-z-indexes"),d(pn,"id","reconceiving-z-indexes"),P(Zn,"display","inline-flex"),P(Zn,"place-items","center"),P(Zn,"place-content","center"),P(Zn,"position","relative"),P(Zn,"background","#1ebf00"),P(Zn,"width","100px"),P(Zn,"height","100px"),P(Zn,"z-index","1"),P(Fn,"display","inline-flex"),P(Fn,"place-items","center"),P(Fn,"place-content","center"),P(Fn,"position","relative"),P(Fn,"background","orange"),P(Fn,"width","100px"),P(Fn,"height","100px"),P(Fn,"transform","translate(-15px, 15px)"),P(Fn,"z-index","2"),P(Gn,"display","inline-flex"),P(Gn,"place-items","center"),P(Gn,"place-content","center"),P(Gn,"position","relative"),P(Gn,"background","#1ebf00"),P(Gn,"width","100px"),P(Gn,"height","100px"),P(Gn,"z-index","1"),P(Xn,"display","inline-flex"),P(Xn,"place-items","center"),P(Xn,"place-content","center"),P(Xn,"position","relative"),P(Xn,"background","orange"),P(Xn,"width","100px"),P(Xn,"height","100px"),P(Xn,"transform","translate(-15px, 15px)"),P(Xn,"z-index","999"),P(Dn,"background-color","gainsboro"),P(Dn,"padding","2em"),P(Dn,"display","grid"),P(Dn,"grid-template-columns","repeat(auto-fit, minmax(250px, 1fr))"),P(Dn,"gap","2em"),P(Dn,"place-items","center"),d(ue,"href","#using-sass-lists"),d(re,"id","using-sass-lists"),d(xe,"class","language-sass"),d($e,"class","language-css"),d(qe,"class","language-scss"),d(na,"href","#ordered-z-index-maps-ozmap-to-the-rescue"),d(Ye,"id","ordered-z-index-maps-ozmap-to-the-rescue"),d($a,"class","language-scss"),d(Sa,"class","language-css")},m(n,t){m(n,e,t),h(e,a),m(n,s,t),m(n,o,t),h(o,i),m(n,k,t),m(n,f,t),h(f,g),m(n,y,t),m(n,v,t),h(v,x),m(n,b,t),m(n,w,t),h(w,z),h(z,E),h(z,$),h(z,A),h(z,N),h(z,D),h(D,O),h(z,R),h(z,C),h(C,M),h(w,L),h(w,j),h(j,F),h(j,H),h(j,V),h(j,W),h(j,K),h(K,_),h(j,U),h(j,q),h(q,G),m(n,J,t),m(n,Q,t),h(Q,X),h(Q,Y),h(Y,nn),h(Q,en),h(Q,an),h(an,sn),h(Q,tn),m(n,on,t),m(n,pn,t),h(pn,cn),h(cn,ln),m(n,rn,t),m(n,un,t),h(un,dn),h(un,hn),h(hn,mn),h(un,kn),h(un,fn),h(fn,gn),h(un,yn),m(n,vn,t),m(n,xn,t),h(xn,bn),h(xn,wn),h(wn,zn),h(xn,En),h(xn,$n),h($n,An),h(xn,Tn),m(n,In,t),m(n,Pn,t),h(Pn,Sn),m(n,Nn,t),m(n,Dn,t),h(Dn,On),h(On,Rn),h(On,Cn),h(On,Mn),h(On,Ln),h(On,Zn),h(Zn,jn),h(On,Bn),h(On,Fn),h(Fn,Hn),h(Dn,Vn),h(Dn,Wn),h(Wn,Kn),h(Wn,_n),h(Wn,Un),h(Wn,qn),h(Wn,Gn),h(Gn,Jn),h(Wn,Qn),h(Wn,Xn),h(Xn,Yn),m(n,ne,t),m(n,ee,t),h(ee,ae),h(ee,se),h(se,te),h(ee,oe),h(ee,pe),h(pe,ie),h(ee,ce),m(n,le,t),m(n,re,t),h(re,ue),h(ue,de),m(n,he,t),m(n,me,t),h(me,ke),h(me,fe),h(fe,ge),h(me,ye),m(n,ve,t),m(n,xe,t),xe.innerHTML='<code class="language-sass"><span class="token variable-line"><span class="token variable">$elementList</span><span class="token punctuation">:</span> (main, header, modal);</span>\n\n<span class="token selector">main &#123;</span>\n<span class="token property-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> index(<span class="token variable">$elementList</span>, main);</span>\n<span class="token selector">&#125;</span>\n\n<span class="token selector">header &#123;</span>\n<span class="token property-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> index(<span class="token variable">$elementList</span>, header);</span>\n<span class="token selector">&#125;</span>\n\n<span class="token selector">.modal &#123;</span>\n<span class="token property-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> index(<span class="token variable">$elementList</span>, modal);</span>\n<span class="token selector">&#125;</span>\n</code>',m(n,be,t),m(n,we,t),h(we,ze),m(n,Ee,t),m(n,$e,t),$e.innerHTML='<code class="language-css"><span class="token selector">main</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">header</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.modal</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',m(n,Ae,t),m(n,Te,t),h(Te,Ie),h(Te,Pe),h(Pe,Se),h(Te,Ne),h(Te,De),h(De,Oe),h(Te,Re),h(Te,Ce),h(Ce,Me),h(Te,Le),m(n,Ze,t),m(n,je,t),h(je,Be),h(je,Fe),h(Fe,He),h(je,Ve),m(n,We,t),m(n,Ke,t),h(Ke,_e),m(n,Ue,t),m(n,qe,t),qe.innerHTML='<code class="language-scss"><span class="token property"><span class="token variable">$zMap</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n  <span class="token property">main</span><span class="token punctuation">:</span> 1<span class="token punctuation">,</span>\n  <span class="token property">header</span><span class="token punctuation">:</span> 2<span class="token punctuation">,</span>\n  <span class="token property">modal</span><span class="token punctuation">:</span> 3<span class="token punctuation">,</span>\n<span class="token punctuation">)</span></code>',m(n,Ge,t),m(n,Je,t),h(Je,Qe),m(n,Xe,t),m(n,Ye,t),h(Ye,na),h(na,ea),m(n,aa,t),m(n,sa,t),h(sa,ta),m(n,oa,t),m(n,pa,t),h(pa,ia),h(ia,ca),h(ia,la),h(la,ra),h(ia,ua),h(pa,da),h(pa,ha),h(ha,ma),h(ha,ka),h(ka,fa),h(fa,ga),h(fa,ya),h(ya,va),h(fa,xa),m(n,ba,t),m(n,wa,t),h(wa,za),m(n,Ea,t),m(n,$a,t),$a.innerHTML='<code class="language-scss"><span class="token property"><span class="token variable">$globalZIndexes</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n  <span class="token property">a</span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n  <span class="token property">b</span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n  <span class="token property">c</span><span class="token punctuation">:</span> 2000<span class="token punctuation">,</span>\n  <span class="token property">d</span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">@function</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span><span class="token variable">$listKey</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">@if</span> <span class="token function">map-has-key</span><span class="token punctuation">(</span><span class="token variable">$globalZIndexes</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$key</span></span><span class="token punctuation">:</span> <span class="token variable">$listKey</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token property"><span class="token variable">$zAccumulator</span></span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n\n    <span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$key</span>, <span class="token variable">$val</span> in <span class="token variable">$globalZIndexes</span> </span><span class="token punctuation">&#123;</span>\n      <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$val</span> == null </span><span class="token punctuation">&#123;</span>\n        <span class="token property"><span class="token variable">$zAccumulator</span></span><span class="token punctuation">:</span> <span class="token variable">$zAccumulator</span> <span class="token operator">+</span> 1<span class="token punctuation">;</span>\n        <span class="token property"><span class="token variable">$val</span></span><span class="token punctuation">:</span> <span class="token variable">$zAccumulator</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n\n      <span class="token keyword">@else</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$val</span> &lt;= <span class="token variable">$zAccumulator</span> </span><span class="token punctuation">&#123;</span>\n          <span class="token comment">//* If the z-index is not greater than the elements preceding it,</span>\n          <span class="token comment">//* the whole element-order paradigm is invalidated</span>\n          @error <span class="token string">"z-index for #&#123;$key&#125; must be greater than the preceding value!"</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n        <span class="token property"><span class="token variable">$zAccumulator</span></span><span class="token punctuation">:</span> <span class="token variable">$val</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n\n      <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$key</span> == <span class="token variable">$listKey</span> </span><span class="token punctuation">&#123;</span>\n        <span class="token keyword">@return</span> <span class="token variable">$zAccumulator</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n\n  <span class="token keyword">@else</span> <span class="token punctuation">&#123;</span>\n    <span class="token atrule"><span class="token rule">@error</span> <span class="token string">"#&#123;$listKey&#125; doesn\'t exist in the $globalZIndexes map"</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n.a</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token selector">.b </span><span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token selector">.c </span><span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token selector">.d </span><span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n</code>',m(n,Aa,t),m(n,Ta,t),h(Ta,Ia),m(n,Pa,t),m(n,Sa,t),Sa.innerHTML='<code class="language-css"><span class="token selector">.a</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.b</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.c</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2000<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.d</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2001<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n</code>',m(n,Na,t),m(n,Da,t),h(Da,Oa)},p:S,d(n){n&&l(e),n&&l(s),n&&l(o),n&&l(k),n&&l(f),n&&l(y),n&&l(v),n&&l(b),n&&l(w),n&&l(J),n&&l(Q),n&&l(on),n&&l(pn),n&&l(rn),n&&l(un),n&&l(vn),n&&l(xn),n&&l(In),n&&l(Pn),n&&l(Nn),n&&l(Dn),n&&l(ne),n&&l(ee),n&&l(le),n&&l(re),n&&l(he),n&&l(me),n&&l(ve),n&&l(xe),n&&l(be),n&&l(we),n&&l(Ee),n&&l($e),n&&l(Ae),n&&l(Te),n&&l(Ze),n&&l(je),n&&l(We),n&&l(Ke),n&&l(Ue),n&&l(qe),n&&l(Ge),n&&l(Je),n&&l(Xe),n&&l(Ye),n&&l(aa),n&&l(sa),n&&l(oa),n&&l(pa),n&&l(ba),n&&l(wa),n&&l(Ea),n&&l($a),n&&l(Aa),n&&l(Ta),n&&l(Pa),n&&l(Sa),n&&l(Na),n&&l(Da)}}}function M(n){let e,a,s,o;const u=[n[0],L];let k={$$slots:{default:[C]},$$scope:{ctx:n}};for(let t=0;t<u.length;t+=1)k=v(k,u[t]);return s=new R({props:k}),{c(){e=t("link"),a=p(),x(s.$$.fragment),this.h()},l(n){const t=i('[data-svelte="svelte-14ut8rz"]',document.head);e=c(t,"LINK",{href:!0,rel:!0}),t.forEach(l),a=r(n),b(s.$$.fragment,n),this.h()},h(){d(e,"href","https://cdn.jsdelivr.net/npm/prism-themes@1.7.0/themes/prism-vsc-dark-plus.css"),d(e,"rel","stylesheet")},m(n,t){h(document.head,e),m(n,a,t),w(s,n,t),o=!0},p(n,[e]){const a=1&e?z(u,[1&e&&E(n[0]),0&e&&E(L)]):{};2&e&&(a.$$scope={dirty:e,ctx:n}),s.$set(a)},i(n){o||(f(s.$$.fragment,n),o=!0)},o(n){g(s.$$.fragment,n),o=!1},d(n){l(e),n&&l(a),$(s,n)}}}const L={title:"OZMap! The ultimate z-index solution",slug:"ordered_z_index_maps",outline:"How ordered maps solve the final issue with z-indexes: 3rd party ones",tags:[{name:"SASS",link:"https://sass-lang.com"}],published_at:"September 13, 2021",image:"/z-index-og-image.jpg"},{title:Z,slug:j,outline:B,tags:F,published_at:H,image:V}=L;function W(n,e,a){return n.$$set=n=>{a(0,e=v(v({},e),A(n)))},[e=A(e)]}export default class extends n{constructor(n){super(),e(this,n,W,M,a,{})}}export{L as metadata};
