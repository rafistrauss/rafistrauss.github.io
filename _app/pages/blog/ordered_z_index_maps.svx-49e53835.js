import{S as n,i as a,s as e,N as s,j as t,k as o,e as p,P as i,m as l,d as c,n as r,c as u,a as d,b as h,o as k,f as m,O as f,v as g,r as y,w as v,A as x,L as b,p as w,q as z,T as E,t as $,g as A,E as I,F as T}from"../../chunks/vendor-0706e083.js";import{S as P}from"../../chunks/index-06ce713d.js";function D(n){let a,e,x,b;a=new P({props:{pageTitle:n[0],pageDescription:n[1],pageUrl:`https://rafistrauss.com/blog/${n[2]}`,pageType:"article"}});const w=n[4].default,z=s(w,n,n[3],null);return{c(){t(a.$$.fragment),e=o(),x=p("article"),z&&z.c(),this.h()},l(n){const s=i('[data-svelte="svelte-1221gwv"]',document.head);l(a.$$.fragment,s),s.forEach(c),e=r(n),x=u(n,"ARTICLE",{class:!0});var t=d(x);z&&z.l(t),t.forEach(c),this.h()},h(){h(x,"class","blog-post")},m(n,s){k(a,document.head,null),m(n,e,s),m(n,x,s),z&&z.m(x,null),b=!0},p(n,[e]){const s={};1&e&&(s.pageTitle=n[0]),2&e&&(s.pageDescription=n[1]),4&e&&(s.pageUrl=`https://rafistrauss.com/blog/${n[2]}`),a.$set(s),z&&z.p&&(!b||8&e)&&f(z,w,n,n[3],e,null,null)},i(n){b||(g(a.$$.fragment,n),g(z,n),b=!0)},o(n){y(a.$$.fragment,n),y(z,n),b=!1},d(n){v(a),n&&c(e),n&&c(x),z&&z.d(n)}}}function S(n,a,e){let{$$slots:s={},$$scope:t}=a,{title:o}=a,{outline:p}=a,{slug:i}=a;return n.$$set=n=>{"title"in n&&e(0,o=n.title),"outline"in n&&e(1,p=n.outline),"slug"in n&&e(2,i=n.slug),"$$scope"in n&&e(3,t=n.$$scope)},[o,p,i,t,s]}class N extends n{constructor(n){super(),a(this,n,S,D,e,{title:0,outline:1,slug:2})}}function C(n){let a,e,s,t,i,l,k,f,g,y,v,x,w,z,E,P,D,S,N,C,O,R,Z,M,F,H,j,V,W,K,U,_,q,G,J,Q,X,Y,nn,an,en,sn,tn,on,pn,ln,cn,rn,un,dn,hn,kn,mn,fn,gn,yn,vn,xn,bn,wn,zn,En,$n,An,In,Tn,Pn,Dn,Sn,Nn,Cn,On,Rn,Ln,Zn,Bn,Mn,Fn,Hn,jn,Vn,Wn,Kn,Un,_n,qn,Gn,Jn,Qn,Xn,Yn,na,aa,ea,sa,ta,oa,pa,ia,la,ca,ra,ua,da,ha,ka,ma,fa,ga,ya,va,xa,ba,wa,za,Ea,$a,Aa,Ia,Ta,Pa,Da,Sa,Na,Ca,Oa,Ra,La,Za,Ba,Ma,Fa,Ha,ja,Va,Wa,Ka,Ua,_a,qa,Ga,Ja,Qa,Xa,Ya,ne,ae,ee,se,te,oe,pe,ie,le,ce,re,ue,de,he,ke,me,fe,ge,ye,ve,xe,be,we,ze,Ee,$e,Ae,Ie,Te,Pe,De,Se,Ne,Ce;return{c(){a=p("h1"),e=$(L),s=o(),t=p("h2"),i=$(B),l=o(),k=p("p"),f=$("Countless bytes have already been written about the issues with maintaining z-indexes and avoiding the classic problem of “battling 9’s” (i.e. “I need A to stack on top of B; let me just add another 9 to the z-index”). As such, I won’t go into too much detail about that particular aspect of the challenge; instead I will focus on a particular pitfall that I’ve never seen addressed before."),g=o(),y=p("p"),v=$("Firstly, though, I will give a brief background so that the necessary details are in place. Z-indexes are how developers can specify which element should be on “top” when multiple elements overlap. A basic example is shown:"),x=o(),w=p("div"),z=p("div"),E=$("Default "),P=p("br"),D=p("br"),S=o(),N=p("span"),C=$("z-index: 1;"),O=o(),R=p("span"),Z=$("z-index: 2"),M=o(),F=p("div"),H=$("Changing overlap with z-index "),j=p("br"),V=p("br"),W=o(),K=p("span"),U=$("z-index: 2"),_=o(),q=p("span"),G=$("z-index: 1;"),J=o(),Q=p("p"),X=$("This works fairly well in many simple cases. The issue becomes one of maintainability - as your site grows and components elements get reused in multiple contexts, it can be hard to keep track of all the different z-indexes you may rely on. For example, at my last check NBC News had 21 unique z-indexes defined, ranging from "),Y=p("code"),nn=$("-1"),an=$(" to "),en=p("code"),sn=$("20000000"),tn=$("."),on=o(),pn=p("h3"),ln=p("a"),cn=$("Reconceiving z-indexes"),rn=o(),un=p("p"),dn=$("The problem partially stems from a misguided view of what a z-index "),hn=p("em"),kn=$("actually"),mn=$(" is. Technically, z-indexes are "),fn=p("strong"),gn=$("cardinal numbers"),yn=$(", where the value of the number matters intrinsically. As an analogy, money can be thought of as cardinal, since $100 is better than $1."),vn=o(),xn=p("p"),bn=$("Conversely, an "),wn=p("strong"),zn=$("ordinal number"),En=$(" is one that delineates an "),$n=p("em"),An=$("order"),In=$(", e.g. First, Second, Fifth, and the like. Think of a race, where the actual time each person runs is almost immaterial (save for things like world records); what matters is who comes First, who comes after, and so on."),Tn=o(),Pn=p("p"),Dn=$("Z-indexes are best visualized as ordinals. To use our above example"),Sn=o(),Nn=p("div"),Cn=p("div"),On=$("Default "),Rn=p("br"),Ln=p("br"),Zn=o(),Bn=p("span"),Mn=$("z-index: 1;"),Fn=o(),Hn=p("span"),jn=$("z-index: 2"),Vn=o(),Wn=p("div"),Kn=$("Very large z-index "),Un=p("br"),_n=p("br"),qn=o(),Gn=p("span"),Jn=$("z-index: 1"),Qn=o(),Xn=p("span"),Yn=$("z-index: 999;"),na=o(),aa=p("p"),ea=$("A z-index of "),sa=p("code"),ta=$("999"),oa=$(" is no better than "),pa=p("code"),ia=$("2"),la=$(" – the only thing that matters is a sufficiently large z-index for the element you wish to appear on top."),ca=o(),ra=p("h3"),ua=p("a"),da=$("Using Sass lists"),ha=o(),ka=p("p"),ma=$("Sass lists are a great way to use this new way of thinking in practice. Instead of having to keep track of a slew of different numbers, you can just make a list with the elements in the order they should stack, then reference the desired element with the "),fa=p("code"),ga=$("index"),ya=$(" function:"),va=o(),xa=p("pre"),ba=o(),wa=p("p"),za=$("which would compile to"),Ea=o(),$a=p("pre"),Aa=o(),Ia=p("p"),Ta=$("To make this method especially cool, since the z-indexes are generated at compile-time we no longer have any issues if we need to slip a new element into the mix. Adding something like a "),Pa=p("code"),Da=$("notification"),Sa=$(" element into the list before the "),Na=p("code"),Ca=$("header"),Oa=$(" element would automatically bump the generated z-index for "),Ra=p("code"),La=$("header"),Za=$(" to 3."),Ba=o(),Ma=p("p"),Fa=$("In my opinion, this is "),Ha=p("em"),ja=$("the"),Va=$(" absolute best way to handle z-indexes – with one caveat. What do you do if there’s a 3rd party element on your page that defines its own z-index, and it doesn’t fall nicely into your list of elements?"),Wa=o(),Ka=p("p"),Ua=$("An alternative approach that I’ve seen proposed is to create a map of your z-indexes, so they are all organized in the same location, something like"),_a=o(),qa=p("pre"),Ga=o(),Ja=p("p"),Qa=$("This solves the issue of arbitrary z-indexes posed by 3rd party elements, but it removes the benefit of ordered & automatically incrementing elements. Can we get the benefits of each of these approaches?"),Xa=o(),Ya=p("h3"),ne=p("a"),ae=$("Ordered z-index maps (OZMap) to the rescue"),ee=o(),se=p("p"),te=$("With a little bit of ingenuity I believe we can eat our cake & have it, too. We do this by creating a new kind of map with the following 2 rules:"),oe=o(),pe=p("ol"),ie=p("li"),le=$("The elements of the map may contain "),ce=p("code"),re=$("null"),ue=$(" (to indicate that the z-index value should be set automatically)"),de=o(),he=p("li"),ke=$("The elements of the map may contain a hardcoded number, to be used as the z-index for that element."),me=p("ul"),fe=p("li"),ge=$("Note that the value "),ye=p("strong"),ve=$("must"),xe=$(" be greater than any preceding element, to maintain the order"),be=o(),we=p("p"),ze=$("An example of what such a map and a function to use it might look like:"),Ee=o(),$e=p("pre"),Ae=o(),Ie=p("p"),Te=$("which would compile to"),Pe=o(),De=p("pre"),Se=o(),Ne=p("p"),Ce=$("Thus, we have achieved both convenience with auto-incrementing z-indexes AND flexibility for 3rd-party defined z-indexes."),this.h()},l(n){a=u(n,"H1",{id:!0});var o=d(a);e=A(o,L),o.forEach(c),s=r(n),t=u(n,"H2",{id:!0});var p=d(t);i=A(p,B),p.forEach(c),l=r(n),k=u(n,"P",{});var h=d(k);f=A(h,"Countless bytes have already been written about the issues with maintaining z-indexes and avoiding the classic problem of “battling 9’s” (i.e. “I need A to stack on top of B; let me just add another 9 to the z-index”). As such, I won’t go into too much detail about that particular aspect of the challenge; instead I will focus on a particular pitfall that I’ve never seen addressed before."),h.forEach(c),g=r(n),y=u(n,"P",{});var m=d(y);v=A(m,"Firstly, though, I will give a brief background so that the necessary details are in place. Z-indexes are how developers can specify which element should be on “top” when multiple elements overlap. A basic example is shown:"),m.forEach(c),x=r(n),w=u(n,"DIV",{style:!0});var b=d(w);z=u(b,"DIV",{});var $=d(z);E=A($,"Default "),P=u($,"BR",{}),D=u($,"BR",{}),S=r($),N=u($,"SPAN",{style:!0});var I=d(N);C=A(I,"z-index: 1;"),I.forEach(c),O=r($),R=u($,"SPAN",{style:!0});var T=d(R);Z=A(T,"z-index: 2"),T.forEach(c),$.forEach(c),M=r(b),F=u(b,"DIV",{});var Oe=d(F);H=A(Oe,"Changing overlap with z-index "),j=u(Oe,"BR",{}),V=u(Oe,"BR",{}),W=r(Oe),K=u(Oe,"SPAN",{style:!0});var Re=d(K);U=A(Re,"z-index: 2"),Re.forEach(c),_=r(Oe),q=u(Oe,"SPAN",{style:!0});var Le=d(q);G=A(Le,"z-index: 1;"),Le.forEach(c),Oe.forEach(c),b.forEach(c),J=r(n),Q=u(n,"P",{});var Ze=d(Q);X=A(Ze,"This works fairly well in many simple cases. The issue becomes one of maintainability - as your site grows and components elements get reused in multiple contexts, it can be hard to keep track of all the different z-indexes you may rely on. For example, at my last check NBC News had 21 unique z-indexes defined, ranging from "),Y=u(Ze,"CODE",{});var Be=d(Y);nn=A(Be,"-1"),Be.forEach(c),an=A(Ze," to "),en=u(Ze,"CODE",{});var Me=d(en);sn=A(Me,"20000000"),Me.forEach(c),tn=A(Ze,"."),Ze.forEach(c),on=r(n),pn=u(n,"H3",{id:!0});var Fe=d(pn);ln=u(Fe,"A",{href:!0});var He=d(ln);cn=A(He,"Reconceiving z-indexes"),He.forEach(c),Fe.forEach(c),rn=r(n),un=u(n,"P",{});var je=d(un);dn=A(je,"The problem partially stems from a misguided view of what a z-index "),hn=u(je,"EM",{});var Ve=d(hn);kn=A(Ve,"actually"),Ve.forEach(c),mn=A(je," is. Technically, z-indexes are "),fn=u(je,"STRONG",{});var We=d(fn);gn=A(We,"cardinal numbers"),We.forEach(c),yn=A(je,", where the value of the number matters intrinsically. As an analogy, money can be thought of as cardinal, since $100 is better than $1."),je.forEach(c),vn=r(n),xn=u(n,"P",{});var Ke=d(xn);bn=A(Ke,"Conversely, an "),wn=u(Ke,"STRONG",{});var Ue=d(wn);zn=A(Ue,"ordinal number"),Ue.forEach(c),En=A(Ke," is one that delineates an "),$n=u(Ke,"EM",{});var _e=d($n);An=A(_e,"order"),_e.forEach(c),In=A(Ke,", e.g. First, Second, Fifth, and the like. Think of a race, where the actual time each person runs is almost immaterial (save for things like world records); what matters is who comes First, who comes after, and so on."),Ke.forEach(c),Tn=r(n),Pn=u(n,"P",{});var qe=d(Pn);Dn=A(qe,"Z-indexes are best visualized as ordinals. To use our above example"),qe.forEach(c),Sn=r(n),Nn=u(n,"DIV",{style:!0});var Ge=d(Nn);Cn=u(Ge,"DIV",{});var Je=d(Cn);On=A(Je,"Default "),Rn=u(Je,"BR",{}),Ln=u(Je,"BR",{}),Zn=r(Je),Bn=u(Je,"SPAN",{style:!0});var Qe=d(Bn);Mn=A(Qe,"z-index: 1;"),Qe.forEach(c),Fn=r(Je),Hn=u(Je,"SPAN",{style:!0});var Xe=d(Hn);jn=A(Xe,"z-index: 2"),Xe.forEach(c),Je.forEach(c),Vn=r(Ge),Wn=u(Ge,"DIV",{});var Ye=d(Wn);Kn=A(Ye,"Very large z-index "),Un=u(Ye,"BR",{}),_n=u(Ye,"BR",{}),qn=r(Ye),Gn=u(Ye,"SPAN",{style:!0});var ns=d(Gn);Jn=A(ns,"z-index: 1"),ns.forEach(c),Qn=r(Ye),Xn=u(Ye,"SPAN",{style:!0});var as=d(Xn);Yn=A(as,"z-index: 999;"),as.forEach(c),Ye.forEach(c),Ge.forEach(c),na=r(n),aa=u(n,"P",{});var es=d(aa);ea=A(es,"A z-index of "),sa=u(es,"CODE",{});var ss=d(sa);ta=A(ss,"999"),ss.forEach(c),oa=A(es," is no better than "),pa=u(es,"CODE",{});var ts=d(pa);ia=A(ts,"2"),ts.forEach(c),la=A(es," – the only thing that matters is a sufficiently large z-index for the element you wish to appear on top."),es.forEach(c),ca=r(n),ra=u(n,"H3",{id:!0});var os=d(ra);ua=u(os,"A",{href:!0});var ps=d(ua);da=A(ps,"Using Sass lists"),ps.forEach(c),os.forEach(c),ha=r(n),ka=u(n,"P",{});var is=d(ka);ma=A(is,"Sass lists are a great way to use this new way of thinking in practice. Instead of having to keep track of a slew of different numbers, you can just make a list with the elements in the order they should stack, then reference the desired element with the "),fa=u(is,"CODE",{});var ls=d(fa);ga=A(ls,"index"),ls.forEach(c),ya=A(is," function:"),is.forEach(c),va=r(n),xa=u(n,"PRE",{class:!0}),d(xa).forEach(c),ba=r(n),wa=u(n,"P",{});var cs=d(wa);za=A(cs,"which would compile to"),cs.forEach(c),Ea=r(n),$a=u(n,"PRE",{class:!0}),d($a).forEach(c),Aa=r(n),Ia=u(n,"P",{});var rs=d(Ia);Ta=A(rs,"To make this method especially cool, since the z-indexes are generated at compile-time we no longer have any issues if we need to slip a new element into the mix. Adding something like a "),Pa=u(rs,"CODE",{});var us=d(Pa);Da=A(us,"notification"),us.forEach(c),Sa=A(rs," element into the list before the "),Na=u(rs,"CODE",{});var ds=d(Na);Ca=A(ds,"header"),ds.forEach(c),Oa=A(rs," element would automatically bump the generated z-index for "),Ra=u(rs,"CODE",{});var hs=d(Ra);La=A(hs,"header"),hs.forEach(c),Za=A(rs," to 3."),rs.forEach(c),Ba=r(n),Ma=u(n,"P",{});var ks=d(Ma);Fa=A(ks,"In my opinion, this is "),Ha=u(ks,"EM",{});var ms=d(Ha);ja=A(ms,"the"),ms.forEach(c),Va=A(ks," absolute best way to handle z-indexes – with one caveat. What do you do if there’s a 3rd party element on your page that defines its own z-index, and it doesn’t fall nicely into your list of elements?"),ks.forEach(c),Wa=r(n),Ka=u(n,"P",{});var fs=d(Ka);Ua=A(fs,"An alternative approach that I’ve seen proposed is to create a map of your z-indexes, so they are all organized in the same location, something like"),fs.forEach(c),_a=r(n),qa=u(n,"PRE",{class:!0}),d(qa).forEach(c),Ga=r(n),Ja=u(n,"P",{});var gs=d(Ja);Qa=A(gs,"This solves the issue of arbitrary z-indexes posed by 3rd party elements, but it removes the benefit of ordered & automatically incrementing elements. Can we get the benefits of each of these approaches?"),gs.forEach(c),Xa=r(n),Ya=u(n,"H3",{id:!0});var ys=d(Ya);ne=u(ys,"A",{href:!0});var vs=d(ne);ae=A(vs,"Ordered z-index maps (OZMap) to the rescue"),vs.forEach(c),ys.forEach(c),ee=r(n),se=u(n,"P",{});var xs=d(se);te=A(xs,"With a little bit of ingenuity I believe we can eat our cake & have it, too. We do this by creating a new kind of map with the following 2 rules:"),xs.forEach(c),oe=r(n),pe=u(n,"OL",{});var bs=d(pe);ie=u(bs,"LI",{});var ws=d(ie);le=A(ws,"The elements of the map may contain "),ce=u(ws,"CODE",{});var zs=d(ce);re=A(zs,"null"),zs.forEach(c),ue=A(ws," (to indicate that the z-index value should be set automatically)"),ws.forEach(c),de=r(bs),he=u(bs,"LI",{});var Es=d(he);ke=A(Es,"The elements of the map may contain a hardcoded number, to be used as the z-index for that element."),me=u(Es,"UL",{});var $s=d(me);fe=u($s,"LI",{});var As=d(fe);ge=A(As,"Note that the value "),ye=u(As,"STRONG",{});var Is=d(ye);ve=A(Is,"must"),Is.forEach(c),xe=A(As," be greater than any preceding element, to maintain the order"),As.forEach(c),$s.forEach(c),Es.forEach(c),bs.forEach(c),be=r(n),we=u(n,"P",{});var Ts=d(we);ze=A(Ts,"An example of what such a map and a function to use it might look like:"),Ts.forEach(c),Ee=r(n),$e=u(n,"PRE",{class:!0}),d($e).forEach(c),Ae=r(n),Ie=u(n,"P",{});var Ps=d(Ie);Te=A(Ps,"which would compile to"),Ps.forEach(c),Pe=r(n),De=u(n,"PRE",{class:!0}),d(De).forEach(c),Se=r(n),Ne=u(n,"P",{});var Ds=d(Ne);Ce=A(Ds,"Thus, we have achieved both convenience with auto-incrementing z-indexes AND flexibility for 3rd-party defined z-indexes."),Ds.forEach(c),this.h()},h(){h(a,"id","title"),h(t,"id","outline"),I(N,"display","inline-flex"),I(N,"place-items","center"),I(N,"place-content","center"),I(N,"position","relative"),I(N,"background","#1ebf00"),I(N,"width","100px"),I(N,"height","100px"),I(N,"z-index","1"),I(R,"display","inline-flex"),I(R,"place-items","center"),I(R,"place-content","center"),I(R,"position","relative"),I(R,"background","orange"),I(R,"width","100px"),I(R,"height","100px"),I(R,"transform","translate(-15px, 15px)"),I(R,"z-index","2"),I(K,"display","inline-flex"),I(K,"place-items","center"),I(K,"place-content","center"),I(K,"position","relative"),I(K,"background","#1ebf00"),I(K,"width","100px"),I(K,"height","100px"),I(K,"z-index","2"),I(q,"display","inline-flex"),I(q,"place-items","center"),I(q,"place-content","center"),I(q,"position","relative"),I(q,"background","orange"),I(q,"width","100px"),I(q,"height","100px"),I(q,"transform","translate(-15px, 15px)"),I(q,"z-index","1"),I(w,"background-color","gainsboro"),I(w,"padding","2em"),I(w,"display","grid"),I(w,"grid-template-columns","repeat(auto-fit, minmax(250px, 1fr))"),I(w,"gap","2em"),I(w,"place-items","center"),h(ln,"href","#reconceiving-z-indexes"),h(pn,"id","reconceiving-z-indexes"),I(Bn,"display","inline-flex"),I(Bn,"place-items","center"),I(Bn,"place-content","center"),I(Bn,"position","relative"),I(Bn,"background","#1ebf00"),I(Bn,"width","100px"),I(Bn,"height","100px"),I(Bn,"z-index","1"),I(Hn,"display","inline-flex"),I(Hn,"place-items","center"),I(Hn,"place-content","center"),I(Hn,"position","relative"),I(Hn,"background","orange"),I(Hn,"width","100px"),I(Hn,"height","100px"),I(Hn,"transform","translate(-15px, 15px)"),I(Hn,"z-index","2"),I(Gn,"display","inline-flex"),I(Gn,"place-items","center"),I(Gn,"place-content","center"),I(Gn,"position","relative"),I(Gn,"background","#1ebf00"),I(Gn,"width","100px"),I(Gn,"height","100px"),I(Gn,"z-index","1"),I(Xn,"display","inline-flex"),I(Xn,"place-items","center"),I(Xn,"place-content","center"),I(Xn,"position","relative"),I(Xn,"background","orange"),I(Xn,"width","100px"),I(Xn,"height","100px"),I(Xn,"transform","translate(-15px, 15px)"),I(Xn,"z-index","999"),I(Nn,"background-color","gainsboro"),I(Nn,"padding","2em"),I(Nn,"display","grid"),I(Nn,"grid-template-columns","repeat(auto-fit, minmax(250px, 1fr))"),I(Nn,"gap","2em"),I(Nn,"place-items","center"),h(ua,"href","#using-sass-lists"),h(ra,"id","using-sass-lists"),h(xa,"class","language-sass"),h($a,"class","language-css"),h(qa,"class","language-scss"),h(ne,"href","#ordered-z-index-maps-ozmap-to-the-rescue"),h(Ya,"id","ordered-z-index-maps-ozmap-to-the-rescue"),h($e,"class","language-scss"),h(De,"class","language-css")},m(n,o){m(n,a,o),b(a,e),m(n,s,o),m(n,t,o),b(t,i),m(n,l,o),m(n,k,o),b(k,f),m(n,g,o),m(n,y,o),b(y,v),m(n,x,o),m(n,w,o),b(w,z),b(z,E),b(z,P),b(z,D),b(z,S),b(z,N),b(N,C),b(z,O),b(z,R),b(R,Z),b(w,M),b(w,F),b(F,H),b(F,j),b(F,V),b(F,W),b(F,K),b(K,U),b(F,_),b(F,q),b(q,G),m(n,J,o),m(n,Q,o),b(Q,X),b(Q,Y),b(Y,nn),b(Q,an),b(Q,en),b(en,sn),b(Q,tn),m(n,on,o),m(n,pn,o),b(pn,ln),b(ln,cn),m(n,rn,o),m(n,un,o),b(un,dn),b(un,hn),b(hn,kn),b(un,mn),b(un,fn),b(fn,gn),b(un,yn),m(n,vn,o),m(n,xn,o),b(xn,bn),b(xn,wn),b(wn,zn),b(xn,En),b(xn,$n),b($n,An),b(xn,In),m(n,Tn,o),m(n,Pn,o),b(Pn,Dn),m(n,Sn,o),m(n,Nn,o),b(Nn,Cn),b(Cn,On),b(Cn,Rn),b(Cn,Ln),b(Cn,Zn),b(Cn,Bn),b(Bn,Mn),b(Cn,Fn),b(Cn,Hn),b(Hn,jn),b(Nn,Vn),b(Nn,Wn),b(Wn,Kn),b(Wn,Un),b(Wn,_n),b(Wn,qn),b(Wn,Gn),b(Gn,Jn),b(Wn,Qn),b(Wn,Xn),b(Xn,Yn),m(n,na,o),m(n,aa,o),b(aa,ea),b(aa,sa),b(sa,ta),b(aa,oa),b(aa,pa),b(pa,ia),b(aa,la),m(n,ca,o),m(n,ra,o),b(ra,ua),b(ua,da),m(n,ha,o),m(n,ka,o),b(ka,ma),b(ka,fa),b(fa,ga),b(ka,ya),m(n,va,o),m(n,xa,o),xa.innerHTML='<code class="language-sass"><span class="token variable-line"><span class="token variable">$elementList</span><span class="token punctuation">:</span> (main, header, modal);</span>\n\n<span class="token selector">main &#123;</span>\n<span class="token property-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> index(<span class="token variable">$elementList</span>, main);</span>\n<span class="token selector">&#125;</span>\n\n<span class="token selector">header &#123;</span>\n<span class="token property-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> index(<span class="token variable">$elementList</span>, header);</span>\n<span class="token selector">&#125;</span>\n\n<span class="token selector">.modal &#123;</span>\n<span class="token property-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> index(<span class="token variable">$elementList</span>, modal);</span>\n<span class="token selector">&#125;</span>\n</code>',m(n,ba,o),m(n,wa,o),b(wa,za),m(n,Ea,o),m(n,$a,o),$a.innerHTML='<code class="language-css"><span class="token selector">main</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">header</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.modal</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',m(n,Aa,o),m(n,Ia,o),b(Ia,Ta),b(Ia,Pa),b(Pa,Da),b(Ia,Sa),b(Ia,Na),b(Na,Ca),b(Ia,Oa),b(Ia,Ra),b(Ra,La),b(Ia,Za),m(n,Ba,o),m(n,Ma,o),b(Ma,Fa),b(Ma,Ha),b(Ha,ja),b(Ma,Va),m(n,Wa,o),m(n,Ka,o),b(Ka,Ua),m(n,_a,o),m(n,qa,o),qa.innerHTML='<code class="language-scss"><span class="token property"><span class="token variable">$zMap</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n  <span class="token property">main</span><span class="token punctuation">:</span> 1<span class="token punctuation">,</span>\n  <span class="token property">header</span><span class="token punctuation">:</span> 2<span class="token punctuation">,</span>\n  <span class="token property">modal</span><span class="token punctuation">:</span> 3<span class="token punctuation">,</span>\n<span class="token punctuation">)</span></code>',m(n,Ga,o),m(n,Ja,o),b(Ja,Qa),m(n,Xa,o),m(n,Ya,o),b(Ya,ne),b(ne,ae),m(n,ee,o),m(n,se,o),b(se,te),m(n,oe,o),m(n,pe,o),b(pe,ie),b(ie,le),b(ie,ce),b(ce,re),b(ie,ue),b(pe,de),b(pe,he),b(he,ke),b(he,me),b(me,fe),b(fe,ge),b(fe,ye),b(ye,ve),b(fe,xe),m(n,be,o),m(n,we,o),b(we,ze),m(n,Ee,o),m(n,$e,o),$e.innerHTML='<code class="language-scss"><span class="token property"><span class="token variable">$globalZIndexes</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n  <span class="token property">a</span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n  <span class="token property">b</span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n  <span class="token property">c</span><span class="token punctuation">:</span> 2000<span class="token punctuation">,</span>\n  <span class="token property">d</span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">@function</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span><span class="token variable">$listKey</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">@if</span> <span class="token function">map-has-key</span><span class="token punctuation">(</span><span class="token variable">$globalZIndexes</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$key</span></span><span class="token punctuation">:</span> <span class="token variable">$listKey</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token property"><span class="token variable">$zAccumulator</span></span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n\n    <span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$key</span>, <span class="token variable">$val</span> in <span class="token variable">$globalZIndexes</span> </span><span class="token punctuation">&#123;</span>\n      <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$val</span> == null </span><span class="token punctuation">&#123;</span>\n        <span class="token property"><span class="token variable">$zAccumulator</span></span><span class="token punctuation">:</span> <span class="token variable">$zAccumulator</span> <span class="token operator">+</span> 1<span class="token punctuation">;</span>\n        <span class="token property"><span class="token variable">$val</span></span><span class="token punctuation">:</span> <span class="token variable">$zAccumulator</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n\n      <span class="token keyword">@else</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$val</span> &lt;= <span class="token variable">$zAccumulator</span> </span><span class="token punctuation">&#123;</span>\n          <span class="token comment">//* If the z-index is not greater than the elements preceding it,</span>\n          <span class="token comment">//* the whole element-order paradigm is invalidated</span>\n          @error <span class="token string">"z-index for #&#123;$key&#125; must be greater than the preceding value!"</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n        <span class="token property"><span class="token variable">$zAccumulator</span></span><span class="token punctuation">:</span> <span class="token variable">$val</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n\n      <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$key</span> == <span class="token variable">$listKey</span> </span><span class="token punctuation">&#123;</span>\n        <span class="token keyword">@return</span> <span class="token variable">$zAccumulator</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n\n  <span class="token keyword">@else</span> <span class="token punctuation">&#123;</span>\n    <span class="token atrule"><span class="token rule">@error</span> <span class="token string">"#&#123;$listKey&#125; doesn\'t exist in the $globalZIndexes map"</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n.a</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token selector">.b </span><span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token selector">.c </span><span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token selector">.d </span><span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token function">getZIndex</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n</code>',m(n,Ae,o),m(n,Ie,o),b(Ie,Te),m(n,Pe,o),m(n,De,o),De.innerHTML='<code class="language-css"><span class="token selector">.a</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.b</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.c</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2000<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token selector">.d</span> <span class="token punctuation">&#123;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 2001<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n</code>',m(n,Se,o),m(n,Ne,o),b(Ne,Ce)},p:T,d(n){n&&c(a),n&&c(s),n&&c(t),n&&c(l),n&&c(k),n&&c(g),n&&c(y),n&&c(x),n&&c(w),n&&c(J),n&&c(Q),n&&c(on),n&&c(pn),n&&c(rn),n&&c(un),n&&c(vn),n&&c(xn),n&&c(Tn),n&&c(Pn),n&&c(Sn),n&&c(Nn),n&&c(na),n&&c(aa),n&&c(ca),n&&c(ra),n&&c(ha),n&&c(ka),n&&c(va),n&&c(xa),n&&c(ba),n&&c(wa),n&&c(Ea),n&&c($a),n&&c(Aa),n&&c(Ia),n&&c(Ba),n&&c(Ma),n&&c(Wa),n&&c(Ka),n&&c(_a),n&&c(qa),n&&c(Ga),n&&c(Ja),n&&c(Xa),n&&c(Ya),n&&c(ee),n&&c(se),n&&c(oe),n&&c(pe),n&&c(be),n&&c(we),n&&c(Ee),n&&c($e),n&&c(Ae),n&&c(Ie),n&&c(Pe),n&&c(De),n&&c(Se),n&&c(Ne)}}}function O(n){let a,e,s,d;const f=[n[0],R];let E={$$slots:{default:[C]},$$scope:{ctx:n}};for(let t=0;t<f.length;t+=1)E=x(E,f[t]);return s=new N({props:E}),{c(){a=p("link"),e=o(),t(s.$$.fragment),this.h()},l(n){const t=i('[data-svelte="svelte-14ut8rz"]',document.head);a=u(t,"LINK",{href:!0,rel:!0}),t.forEach(c),e=r(n),l(s.$$.fragment,n),this.h()},h(){h(a,"href","https://cdn.jsdelivr.net/npm/prism-themes@1.7.0/themes/prism-vsc-dark-plus.css"),h(a,"rel","stylesheet")},m(n,t){b(document.head,a),m(n,e,t),k(s,n,t),d=!0},p(n,[a]){const e=1&a?w(f,[1&a&&z(n[0]),0&a&&z(R)]):{};2&a&&(e.$$scope={dirty:a,ctx:n}),s.$set(e)},i(n){d||(g(s.$$.fragment,n),d=!0)},o(n){y(s.$$.fragment,n),d=!1},d(n){c(a),n&&c(e),v(s,n)}}}const R={title:"OZMap! The ultimate z-index solution",slug:"ordered_z_index_maps",outline:"How ordered maps solve the final issue with z-indexes: 3rd party ones",tags:[{name:"SASS",link:"https://sass-lang.com"}],published_at:"September 13, 2021"},{title:L,slug:Z,outline:B,tags:M,published_at:F}=R;function H(n,a,e){return n.$$set=n=>{e(0,a=x(x({},a),E(n)))},[a=E(a)]}export default class extends n{constructor(n){super(),a(this,n,H,O,e,{})}}export{R as metadata};
